// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: proto/workload_manager.proto

package workloadmanager

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SchedulingPolicyOperator int32

const (
	SchedulingPolicyOperator_IN     SchedulingPolicyOperator = 0
	SchedulingPolicyOperator_NOT_IN SchedulingPolicyOperator = 1
	SchedulingPolicyOperator_ONE_OF SchedulingPolicyOperator = 2
	SchedulingPolicyOperator_IS     SchedulingPolicyOperator = 3
)

// Enum value maps for SchedulingPolicyOperator.
var (
	SchedulingPolicyOperator_name = map[int32]string{
		0: "IN",
		1: "NOT_IN",
		2: "ONE_OF",
		3: "IS",
	}
	SchedulingPolicyOperator_value = map[string]int32{
		"IN":     0,
		"NOT_IN": 1,
		"ONE_OF": 2,
		"IS":     3,
	}
)

func (x SchedulingPolicyOperator) Enum() *SchedulingPolicyOperator {
	p := new(SchedulingPolicyOperator)
	*p = x
	return p
}

func (x SchedulingPolicyOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulingPolicyOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workload_manager_proto_enumTypes[0].Descriptor()
}

func (SchedulingPolicyOperator) Type() protoreflect.EnumType {
	return &file_proto_workload_manager_proto_enumTypes[0]
}

func (x SchedulingPolicyOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulingPolicyOperator.Descriptor instead.
func (SchedulingPolicyOperator) EnumDescriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{0}
}

type WorkloadState int32

const (
	WorkloadState_UNKNOWN    WorkloadState = 0
	WorkloadState_NEW        WorkloadState = 1
	WorkloadState_ACCEPTED   WorkloadState = 2
	WorkloadState_DISPATCHED WorkloadState = 3
	WorkloadState_RUNNING    WorkloadState = 4
	WorkloadState_COMPLETED  WorkloadState = 5
	WorkloadState_FAILED     WorkloadState = 6
	WorkloadState_REJECTED   WorkloadState = 7
)

// Enum value maps for WorkloadState.
var (
	WorkloadState_name = map[int32]string{
		0: "UNKNOWN",
		1: "NEW",
		2: "ACCEPTED",
		3: "DISPATCHED",
		4: "RUNNING",
		5: "COMPLETED",
		6: "FAILED",
		7: "REJECTED",
	}
	WorkloadState_value = map[string]int32{
		"UNKNOWN":    0,
		"NEW":        1,
		"ACCEPTED":   2,
		"DISPATCHED": 3,
		"RUNNING":    4,
		"COMPLETED":  5,
		"FAILED":     6,
		"REJECTED":   7,
	}
)

func (x WorkloadState) Enum() *WorkloadState {
	p := new(WorkloadState)
	*p = x
	return p
}

func (x WorkloadState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workload_manager_proto_enumTypes[1].Descriptor()
}

func (WorkloadState) Type() protoreflect.EnumType {
	return &file_proto_workload_manager_proto_enumTypes[1]
}

func (x WorkloadState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadState.Descriptor instead.
func (WorkloadState) EnumDescriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{1}
}

type LogLevel int32

const (
	LogLevel_DEBUG LogLevel = 0
	LogLevel_INFO  LogLevel = 1
	LogLevel_ERROR LogLevel = 2
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "ERROR",
	}
	LogLevel_value = map[string]int32{
		"DEBUG": 0,
		"INFO":  1,
		"ERROR": 2,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workload_manager_proto_enumTypes[2].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_proto_workload_manager_proto_enumTypes[2]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{2}
}

type WorkloadPatchType int32

const (
	WorkloadPatchType_WORKLOAD_MERGE           WorkloadPatchType = 0
	WorkloadPatchType_WORKLOAD_JSON            WorkloadPatchType = 1
	WorkloadPatchType_WORKLOAD_STRATEGIC_MERGE WorkloadPatchType = 2
	WorkloadPatchType_WORKLOAD_APPLY_PATCH     WorkloadPatchType = 3
)

// Enum value maps for WorkloadPatchType.
var (
	WorkloadPatchType_name = map[int32]string{
		0: "WORKLOAD_MERGE",
		1: "WORKLOAD_JSON",
		2: "WORKLOAD_STRATEGIC_MERGE",
		3: "WORKLOAD_APPLY_PATCH",
	}
	WorkloadPatchType_value = map[string]int32{
		"WORKLOAD_MERGE":           0,
		"WORKLOAD_JSON":            1,
		"WORKLOAD_STRATEGIC_MERGE": 2,
		"WORKLOAD_APPLY_PATCH":     3,
	}
)

func (x WorkloadPatchType) Enum() *WorkloadPatchType {
	p := new(WorkloadPatchType)
	*p = x
	return p
}

func (x WorkloadPatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadPatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_workload_manager_proto_enumTypes[3].Descriptor()
}

func (WorkloadPatchType) Type() protoreflect.EnumType {
	return &file_proto_workload_manager_proto_enumTypes[3]
}

func (x WorkloadPatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadPatchType.Descriptor instead.
func (WorkloadPatchType) EnumDescriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{3}
}

type OperationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationState string `protobuf:"bytes,1,opt,name=operationState,proto3" json:"operationState,omitempty"`
	Msg            string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *OperationSummary) Reset() {
	*x = OperationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationSummary) ProtoMessage() {}

func (x *OperationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationSummary.ProtoReflect.Descriptor instead.
func (*OperationSummary) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{0}
}

func (x *OperationSummary) GetOperationState() string {
	if x != nil {
		return x.OperationState
	}
	return ""
}

func (x *OperationSummary) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type WorkloadSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue              string              `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	WorkloadName       string              `protobuf:"bytes,2,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	WorkloadDefinition []byte              `protobuf:"bytes,3,opt,name=workloadDefinition,proto3" json:"workloadDefinition,omitempty"`
	Tags               []*Tag              `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	SchedulingPolicies []*SchedulingPolicy `protobuf:"bytes,5,rep,name=schedulingPolicies,proto3" json:"schedulingPolicies,omitempty"`
	Description        string              `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Priority           int32               `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	State              WorkloadState       `protobuf:"varint,8,opt,name=state,proto3,enum=WorkloadState" json:"state,omitempty"`
	WorkloadSlo        *WorkloadSlo        `protobuf:"bytes,9,opt,name=workloadSlo,proto3" json:"workloadSlo,omitempty"`
}

func (x *WorkloadSpec) Reset() {
	*x = WorkloadSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadSpec) ProtoMessage() {}

func (x *WorkloadSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadSpec.ProtoReflect.Descriptor instead.
func (*WorkloadSpec) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{1}
}

func (x *WorkloadSpec) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *WorkloadSpec) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *WorkloadSpec) GetWorkloadDefinition() []byte {
	if x != nil {
		return x.WorkloadDefinition
	}
	return nil
}

func (x *WorkloadSpec) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WorkloadSpec) GetSchedulingPolicies() []*SchedulingPolicy {
	if x != nil {
		return x.SchedulingPolicies
	}
	return nil
}

func (x *WorkloadSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkloadSpec) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *WorkloadSpec) GetState() WorkloadState {
	if x != nil {
		return x.State
	}
	return WorkloadState_UNKNOWN
}

func (x *WorkloadSpec) GetWorkloadSlo() *WorkloadSlo {
	if x != nil {
		return x.WorkloadSlo
	}
	return nil
}

type WorkloadSlo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Slo:
	//
	//	*WorkloadSlo_EndTime
	//	*WorkloadSlo_Duration
	Slo isWorkloadSlo_Slo `protobuf_oneof:"Slo"`
}

func (x *WorkloadSlo) Reset() {
	*x = WorkloadSlo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadSlo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadSlo) ProtoMessage() {}

func (x *WorkloadSlo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadSlo.ProtoReflect.Descriptor instead.
func (*WorkloadSlo) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{2}
}

func (m *WorkloadSlo) GetSlo() isWorkloadSlo_Slo {
	if m != nil {
		return m.Slo
	}
	return nil
}

func (x *WorkloadSlo) GetEndTime() *timestamppb.Timestamp {
	if x, ok := x.GetSlo().(*WorkloadSlo_EndTime); ok {
		return x.EndTime
	}
	return nil
}

func (x *WorkloadSlo) GetDuration() *durationpb.Duration {
	if x, ok := x.GetSlo().(*WorkloadSlo_Duration); ok {
		return x.Duration
	}
	return nil
}

type isWorkloadSlo_Slo interface {
	isWorkloadSlo_Slo()
}

type WorkloadSlo_EndTime struct {
	EndTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=EndTime,proto3,oneof"`
}

type WorkloadSlo_Duration struct {
	Duration *durationpb.Duration `protobuf:"bytes,2,opt,name=Duration,proto3,oneof"`
}

func (*WorkloadSlo_EndTime) isWorkloadSlo_Slo() {}

func (*WorkloadSlo_Duration) isWorkloadSlo_Slo() {}

type WorkloadSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId     string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
	WorkloadName   string `protobuf:"bytes,2,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	Queue          string `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"`
	Cluster        string `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace      string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	State          string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	SubmissionTime string `protobuf:"bytes,7,opt,name=submissionTime,proto3" json:"submissionTime,omitempty"`
	FinishTime     string `protobuf:"bytes,8,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	Description    string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Gvkr           *GVKR  `protobuf:"bytes,10,opt,name=gvkr,proto3" json:"gvkr,omitempty"`
	Duration       string `protobuf:"bytes,11,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *WorkloadSnapshot) Reset() {
	*x = WorkloadSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadSnapshot) ProtoMessage() {}

func (x *WorkloadSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadSnapshot.ProtoReflect.Descriptor instead.
func (*WorkloadSnapshot) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{3}
}

func (x *WorkloadSnapshot) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *WorkloadSnapshot) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *WorkloadSnapshot) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *WorkloadSnapshot) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *WorkloadSnapshot) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *WorkloadSnapshot) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WorkloadSnapshot) GetSubmissionTime() string {
	if x != nil {
		return x.SubmissionTime
	}
	return ""
}

func (x *WorkloadSnapshot) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *WorkloadSnapshot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WorkloadSnapshot) GetGvkr() *GVKR {
	if x != nil {
		return x.Gvkr
	}
	return nil
}

func (x *WorkloadSnapshot) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type GVKR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Version  string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Kind     string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Resource string `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GVKR) Reset() {
	*x = GVKR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GVKR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GVKR) ProtoMessage() {}

func (x *GVKR) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GVKR.ProtoReflect.Descriptor instead.
func (*GVKR) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{4}
}

func (x *GVKR) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GVKR) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GVKR) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GVKR) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{5}
}

func (x *Tag) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Tag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SchedulingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value    string                   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operator SchedulingPolicyOperator `protobuf:"varint,3,opt,name=operator,proto3,enum=SchedulingPolicyOperator" json:"operator,omitempty"`
}

func (x *SchedulingPolicy) Reset() {
	*x = SchedulingPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulingPolicy) ProtoMessage() {}

func (x *SchedulingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulingPolicy.ProtoReflect.Descriptor instead.
func (*SchedulingPolicy) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{6}
}

func (x *SchedulingPolicy) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SchedulingPolicy) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SchedulingPolicy) GetOperator() SchedulingPolicyOperator {
	if x != nil {
		return x.Operator
	}
	return SchedulingPolicyOperator_IN
}

type SubmitWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId   string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
	WorkloadName string `protobuf:"bytes,2,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	State        string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SubmitWorkloadResponse) Reset() {
	*x = SubmitWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitWorkloadResponse) ProtoMessage() {}

func (x *SubmitWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitWorkloadResponse.ProtoReflect.Descriptor instead.
func (*SubmitWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitWorkloadResponse) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *SubmitWorkloadResponse) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *SubmitWorkloadResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type DescribeWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
}

func (x *DescribeWorkloadRequest) Reset() {
	*x = DescribeWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeWorkloadRequest) ProtoMessage() {}

func (x *DescribeWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeWorkloadRequest.ProtoReflect.Descriptor instead.
func (*DescribeWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeWorkloadRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

type GetWorkloadStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
	Details    bool   `protobuf:"varint,2,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *GetWorkloadStatusRequest) Reset() {
	*x = GetWorkloadStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadStatusRequest) ProtoMessage() {}

func (x *GetWorkloadStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadStatusRequest.ProtoReflect.Descriptor instead.
func (*GetWorkloadStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{9}
}

func (x *GetWorkloadStatusRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *GetWorkloadStatusRequest) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

type WorkloadStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State            WorkloadState     `protobuf:"varint,1,opt,name=state,proto3,enum=WorkloadState" json:"state,omitempty"`
	Summary          string            `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	WorkloadSnapshot *WorkloadSnapshot `protobuf:"bytes,3,opt,name=workloadSnapshot,proto3" json:"workloadSnapshot,omitempty"`
	Events           []*WorkloadEvent  `protobuf:"bytes,4,rep,name=events,proto3" json:"events,omitempty"`
	Pods             []*PodStatus      `protobuf:"bytes,5,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *WorkloadStatusResponse) Reset() {
	*x = WorkloadStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadStatusResponse) ProtoMessage() {}

func (x *WorkloadStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadStatusResponse.ProtoReflect.Descriptor instead.
func (*WorkloadStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{10}
}

func (x *WorkloadStatusResponse) GetState() WorkloadState {
	if x != nil {
		return x.State
	}
	return WorkloadState_UNKNOWN
}

func (x *WorkloadStatusResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *WorkloadStatusResponse) GetWorkloadSnapshot() *WorkloadSnapshot {
	if x != nil {
		return x.WorkloadSnapshot
	}
	return nil
}

func (x *WorkloadStatusResponse) GetEvents() []*WorkloadEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *WorkloadStatusResponse) GetPods() []*PodStatus {
	if x != nil {
		return x.Pods
	}
	return nil
}

type DescribeWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadSnapshot   *WorkloadSnapshot `protobuf:"bytes,1,opt,name=workloadSnapshot,proto3" json:"workloadSnapshot,omitempty"`
	WorkloadDefinition []byte            `protobuf:"bytes,2,opt,name=workloadDefinition,proto3" json:"workloadDefinition,omitempty"`
	Events             []*WorkloadEvent  `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *DescribeWorkloadResponse) Reset() {
	*x = DescribeWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeWorkloadResponse) ProtoMessage() {}

func (x *DescribeWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeWorkloadResponse.ProtoReflect.Descriptor instead.
func (*DescribeWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeWorkloadResponse) GetWorkloadSnapshot() *WorkloadSnapshot {
	if x != nil {
		return x.WorkloadSnapshot
	}
	return nil
}

func (x *DescribeWorkloadResponse) GetWorkloadDefinition() []byte {
	if x != nil {
		return x.WorkloadDefinition
	}
	return nil
}

func (x *DescribeWorkloadResponse) GetEvents() []*WorkloadEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type PodStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName      string `protobuf:"bytes,1,opt,name=podName,proto3" json:"podName,omitempty"`
	Status       string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Restarts     int32  `protobuf:"varint,3,opt,name=restarts,proto3" json:"restarts,omitempty"`
	AgeInSeconds int32  `protobuf:"varint,4,opt,name=ageInSeconds,proto3" json:"ageInSeconds,omitempty"`
}

func (x *PodStatus) Reset() {
	*x = PodStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodStatus) ProtoMessage() {}

func (x *PodStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodStatus.ProtoReflect.Descriptor instead.
func (*PodStatus) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{12}
}

func (x *PodStatus) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PodStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PodStatus) GetRestarts() int32 {
	if x != nil {
		return x.Restarts
	}
	return 0
}

func (x *PodStatus) GetAgeInSeconds() int32 {
	if x != nil {
		return x.AgeInSeconds
	}
	return 0
}

type GetWorkloadEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
}

func (x *GetWorkloadEventsRequest) Reset() {
	*x = GetWorkloadEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadEventsRequest) ProtoMessage() {}

func (x *GetWorkloadEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadEventsRequest.ProtoReflect.Descriptor instead.
func (*GetWorkloadEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{13}
}

func (x *GetWorkloadEventsRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

type GetWorkloadEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*WorkloadEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetWorkloadEventsResponse) Reset() {
	*x = GetWorkloadEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadEventsResponse) ProtoMessage() {}

func (x *GetWorkloadEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadEventsResponse.ProtoReflect.Descriptor instead.
func (*GetWorkloadEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{14}
}

func (x *GetWorkloadEventsResponse) GetEvents() []*WorkloadEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type WorkloadEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object   string                 `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	State    WorkloadState          `protobuf:"varint,2,opt,name=state,proto3,enum=WorkloadState" json:"state,omitempty"`
	Type     string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Reason   string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Msg      string                 `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg,omitempty"`
	Count    int32                  `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	LastSeen *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`
}

func (x *WorkloadEvent) Reset() {
	*x = WorkloadEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadEvent) ProtoMessage() {}

func (x *WorkloadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadEvent.ProtoReflect.Descriptor instead.
func (*WorkloadEvent) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{15}
}

func (x *WorkloadEvent) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *WorkloadEvent) GetState() WorkloadState {
	if x != nil {
		return x.State
	}
	return WorkloadState_UNKNOWN
}

func (x *WorkloadEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WorkloadEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *WorkloadEvent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WorkloadEvent) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WorkloadEvent) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type GetLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId    string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
	PodName       string `protobuf:"bytes,2,opt,name=podName,proto3" json:"podName,omitempty"`
	ContainerName string `protobuf:"bytes,3,opt,name=containerName,proto3" json:"containerName,omitempty"`
}

func (x *GetLogsRequest) Reset() {
	*x = GetLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsRequest) ProtoMessage() {}

func (x *GetLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLogsRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{16}
}

func (x *GetLogsRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *GetLogsRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetLogsRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

type GetLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log []byte `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *GetLogsResponse) Reset() {
	*x = GetLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogsResponse) ProtoMessage() {}

func (x *GetLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogsResponse.ProtoReflect.Descriptor instead.
func (*GetLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{17}
}

func (x *GetLogsResponse) GetLog() []byte {
	if x != nil {
		return x.Log
	}
	return nil
}

type DeleteWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId         string `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
	Force              bool   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	GracePeriodSeconds int32  `protobuf:"varint,3,opt,name=gracePeriodSeconds,proto3" json:"gracePeriodSeconds,omitempty"`
}

func (x *DeleteWorkloadRequest) Reset() {
	*x = DeleteWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkloadRequest) ProtoMessage() {}

func (x *DeleteWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkloadRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteWorkloadRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *DeleteWorkloadRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *DeleteWorkloadRequest) GetGracePeriodSeconds() int32 {
	if x != nil {
		return x.GracePeriodSeconds
	}
	return 0
}

type ListWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue       string       `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	ListOptions *ListOptions `protobuf:"bytes,2,opt,name=listOptions,proto3" json:"listOptions,omitempty"`
}

func (x *ListWorkloadRequest) Reset() {
	*x = ListWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadRequest) ProtoMessage() {}

func (x *ListWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadRequest.ProtoReflect.Descriptor instead.
func (*ListWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{19}
}

func (x *ListWorkloadRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *ListWorkloadRequest) GetListOptions() *ListOptions {
	if x != nil {
		return x.ListOptions
	}
	return nil
}

type ListOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// More fields will be added including filters
	WorkloadName  string `protobuf:"bytes,1,opt,name=workloadName,proto3" json:"workloadName,omitempty"`
	WorkloadState string `protobuf:"bytes,2,opt,name=workloadState,proto3" json:"workloadState,omitempty"`
}

func (x *ListOptions) Reset() {
	*x = ListOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOptions) ProtoMessage() {}

func (x *ListOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOptions.ProtoReflect.Descriptor instead.
func (*ListOptions) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{20}
}

func (x *ListOptions) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *ListOptions) GetWorkloadState() string {
	if x != nil {
		return x.WorkloadState
	}
	return ""
}

type ListWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*WorkloadSnapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
}

func (x *ListWorkloadResponse) Reset() {
	*x = ListWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadResponse) ProtoMessage() {}

func (x *ListWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadResponse.ProtoReflect.Descriptor instead.
func (*ListWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{21}
}

func (x *ListWorkloadResponse) GetSnapshots() []*WorkloadSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type PatchWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadId string            `protobuf:"bytes,1,opt,name=workloadId,proto3" json:"workloadId,omitempty"`
	PatchType  WorkloadPatchType `protobuf:"varint,2,opt,name=patchType,proto3,enum=WorkloadPatchType" json:"patchType,omitempty"`
	Data       []byte            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PatchWorkloadRequest) Reset() {
	*x = PatchWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_workload_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchWorkloadRequest) ProtoMessage() {}

func (x *PatchWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_workload_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchWorkloadRequest.ProtoReflect.Descriptor instead.
func (*PatchWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_workload_manager_proto_rawDescGZIP(), []int{22}
}

func (x *PatchWorkloadRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *PatchWorkloadRequest) GetPatchType() WorkloadPatchType {
	if x != nil {
		return x.PatchType
	}
	return WorkloadPatchType_WORKLOAD_MERGE
}

func (x *PatchWorkloadRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_workload_manager_proto protoreflect.FileDescriptor

var file_proto_workload_manager_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a,
	0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe9, 0x02, 0x0a, 0x0c,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x41, 0x0a, 0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x12, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6c, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x53, 0x6c, 0x6f, 0x22,
	0xdb, 0x02, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x67, 0x76, 0x6b, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x56, 0x4b, 0x52, 0x52, 0x04, 0x67, 0x76, 0x6b,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a,
	0x04, 0x47, 0x56, 0x4b, 0x52, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2d, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x71, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x72, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x17, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xdf, 0x01, 0x0a,
	0x16, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50,
	0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22, 0xb1,
	0x01, 0x0a, 0x18, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x7d, 0x0a, 0x09, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0x3a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x22, 0x70,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x7d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x67, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x57, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x22, 0x7c, 0x0a, 0x14, 0x50, 0x61, 0x74, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x2a, 0x42, 0x0a, 0x18, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x46, 0x10, 0x02, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x53, 0x10, 0x03, 0x2a, 0x79, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49,
	0x53, 0x50, 0x41, 0x54, 0x43, 0x48, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x07,
	0x2a, 0x2a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05,
	0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x2a, 0x72, 0x0a, 0x11,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4d, 0x45,
	0x52, 0x47, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41,
	0x44, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x4f, 0x52, 0x4b,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x49, 0x43, 0x5f, 0x4d,
	0x45, 0x52, 0x47, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f,
	0x41, 0x44, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03,
	0x32, 0xef, 0x05, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x0d,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x1a, 0x17, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01,
	0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x12, 0x63, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x18, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x19, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x72,
	0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12,
	0x21, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x7d, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x52, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64,
	0x7d, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x57, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x7d, 0x12,
	0x4a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76,
	0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x55, 0x0a, 0x05, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x32, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x7d, 0x42, 0x12, 0x5a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_workload_manager_proto_rawDescOnce sync.Once
	file_proto_workload_manager_proto_rawDescData = file_proto_workload_manager_proto_rawDesc
)

func file_proto_workload_manager_proto_rawDescGZIP() []byte {
	file_proto_workload_manager_proto_rawDescOnce.Do(func() {
		file_proto_workload_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_workload_manager_proto_rawDescData)
	})
	return file_proto_workload_manager_proto_rawDescData
}

var file_proto_workload_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_workload_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_workload_manager_proto_goTypes = []any{
	(SchedulingPolicyOperator)(0),     // 0: SchedulingPolicyOperator
	(WorkloadState)(0),                // 1: WorkloadState
	(LogLevel)(0),                     // 2: LogLevel
	(WorkloadPatchType)(0),            // 3: WorkloadPatchType
	(*OperationSummary)(nil),          // 4: OperationSummary
	(*WorkloadSpec)(nil),              // 5: WorkloadSpec
	(*WorkloadSlo)(nil),               // 6: WorkloadSlo
	(*WorkloadSnapshot)(nil),          // 7: WorkloadSnapshot
	(*GVKR)(nil),                      // 8: GVKR
	(*Tag)(nil),                       // 9: Tag
	(*SchedulingPolicy)(nil),          // 10: SchedulingPolicy
	(*SubmitWorkloadResponse)(nil),    // 11: SubmitWorkloadResponse
	(*DescribeWorkloadRequest)(nil),   // 12: DescribeWorkloadRequest
	(*GetWorkloadStatusRequest)(nil),  // 13: GetWorkloadStatusRequest
	(*WorkloadStatusResponse)(nil),    // 14: WorkloadStatusResponse
	(*DescribeWorkloadResponse)(nil),  // 15: DescribeWorkloadResponse
	(*PodStatus)(nil),                 // 16: PodStatus
	(*GetWorkloadEventsRequest)(nil),  // 17: GetWorkloadEventsRequest
	(*GetWorkloadEventsResponse)(nil), // 18: GetWorkloadEventsResponse
	(*WorkloadEvent)(nil),             // 19: WorkloadEvent
	(*GetLogsRequest)(nil),            // 20: GetLogsRequest
	(*GetLogsResponse)(nil),           // 21: GetLogsResponse
	(*DeleteWorkloadRequest)(nil),     // 22: DeleteWorkloadRequest
	(*ListWorkloadRequest)(nil),       // 23: ListWorkloadRequest
	(*ListOptions)(nil),               // 24: ListOptions
	(*ListWorkloadResponse)(nil),      // 25: ListWorkloadResponse
	(*PatchWorkloadRequest)(nil),      // 26: PatchWorkloadRequest
	(*timestamppb.Timestamp)(nil),     // 27: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),       // 28: google.protobuf.Duration
}
var file_proto_workload_manager_proto_depIdxs = []int32{
	9,  // 0: WorkloadSpec.tags:type_name -> Tag
	10, // 1: WorkloadSpec.schedulingPolicies:type_name -> SchedulingPolicy
	1,  // 2: WorkloadSpec.state:type_name -> WorkloadState
	6,  // 3: WorkloadSpec.workloadSlo:type_name -> WorkloadSlo
	27, // 4: WorkloadSlo.EndTime:type_name -> google.protobuf.Timestamp
	28, // 5: WorkloadSlo.Duration:type_name -> google.protobuf.Duration
	8,  // 6: WorkloadSnapshot.gvkr:type_name -> GVKR
	0,  // 7: SchedulingPolicy.operator:type_name -> SchedulingPolicyOperator
	1,  // 8: WorkloadStatusResponse.state:type_name -> WorkloadState
	7,  // 9: WorkloadStatusResponse.workloadSnapshot:type_name -> WorkloadSnapshot
	19, // 10: WorkloadStatusResponse.events:type_name -> WorkloadEvent
	16, // 11: WorkloadStatusResponse.pods:type_name -> PodStatus
	7,  // 12: DescribeWorkloadResponse.workloadSnapshot:type_name -> WorkloadSnapshot
	19, // 13: DescribeWorkloadResponse.events:type_name -> WorkloadEvent
	19, // 14: GetWorkloadEventsResponse.events:type_name -> WorkloadEvent
	1,  // 15: WorkloadEvent.state:type_name -> WorkloadState
	27, // 16: WorkloadEvent.lastSeen:type_name -> google.protobuf.Timestamp
	24, // 17: ListWorkloadRequest.listOptions:type_name -> ListOptions
	7,  // 18: ListWorkloadResponse.snapshots:type_name -> WorkloadSnapshot
	3,  // 19: PatchWorkloadRequest.patchType:type_name -> WorkloadPatchType
	5,  // 20: WorkloadManager.Submit:input_type -> WorkloadSpec
	12, // 21: WorkloadManager.Describe:input_type -> DescribeWorkloadRequest
	13, // 22: WorkloadManager.Status:input_type -> GetWorkloadStatusRequest
	17, // 23: WorkloadManager.WorkloadEvents:input_type -> GetWorkloadEventsRequest
	20, // 24: WorkloadManager.Logs:input_type -> GetLogsRequest
	22, // 25: WorkloadManager.Delete:input_type -> DeleteWorkloadRequest
	23, // 26: WorkloadManager.List:input_type -> ListWorkloadRequest
	26, // 27: WorkloadManager.Patch:input_type -> PatchWorkloadRequest
	11, // 28: WorkloadManager.Submit:output_type -> SubmitWorkloadResponse
	15, // 29: WorkloadManager.Describe:output_type -> DescribeWorkloadResponse
	14, // 30: WorkloadManager.Status:output_type -> WorkloadStatusResponse
	18, // 31: WorkloadManager.WorkloadEvents:output_type -> GetWorkloadEventsResponse
	21, // 32: WorkloadManager.Logs:output_type -> GetLogsResponse
	4,  // 33: WorkloadManager.Delete:output_type -> OperationSummary
	25, // 34: WorkloadManager.List:output_type -> ListWorkloadResponse
	4,  // 35: WorkloadManager.Patch:output_type -> OperationSummary
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_workload_manager_proto_init() }
func file_proto_workload_manager_proto_init() {
	if File_proto_workload_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_workload_manager_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*OperationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WorkloadSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*WorkloadSlo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*WorkloadSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GVKR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SchedulingPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetWorkloadStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*WorkloadStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DescribeWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PodStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetWorkloadEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetWorkloadEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*WorkloadEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ListOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ListWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_workload_manager_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PatchWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_workload_manager_proto_msgTypes[2].OneofWrappers = []any{
		(*WorkloadSlo_EndTime)(nil),
		(*WorkloadSlo_Duration)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_workload_manager_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_workload_manager_proto_goTypes,
		DependencyIndexes: file_proto_workload_manager_proto_depIdxs,
		EnumInfos:         file_proto_workload_manager_proto_enumTypes,
		MessageInfos:      file_proto_workload_manager_proto_msgTypes,
	}.Build()
	File_proto_workload_manager_proto = out.File
	file_proto_workload_manager_proto_rawDesc = nil
	file_proto_workload_manager_proto_goTypes = nil
	file_proto_workload_manager_proto_depIdxs = nil
}
